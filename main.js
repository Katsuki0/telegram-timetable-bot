const TelegramBot = require('node-telegram-bot-api'); // –æ—Å–Ω–æ–≤–Ω–∞—è –±–∏–±–ª–∏–æ—Ç–µ–∫–∞.
//const { Markup } = require('telegraf'); // –ö–Ω–æ–ø–∫–∏.
const fs = require('fs'); // —á—Ç–µ–Ω–∏–µ —Ñ–∞–π–ª–æ–≤
const sqlite = require('sqlite-sync'); // –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö.
const schedule = require('node-schedule'); // –î–ª—è —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–π

const bot = new TelegramBot('TOKEN', { polling: true }); // –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–æ—Ç—É, polling - short polling - —á–∞—Å—Ç–æ—Ç–∞ –æ–ø—Ä–æ—Å–∞ Telegram.


sqlite.connect('data.db'); // –û—Ç–∫—Ä—ã—Ç–∏–µ sqlite3 –±–¥, –µ—Å–ª–∏ –Ω–µ—Ç, —Ç–æ —Å–æ–∑–¥–∞–µ—Ç.

let awaitingSupportMessage = {}; // –•—Ä–∞–Ω–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è—Ö, –æ–∂–∏–¥–∞—é—â–∏—Ö –ø–æ–¥–¥–µ—Ä–∂–∫–∏
// –•—Ä–∞–Ω–µ–Ω–∏–µ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö —Ç–µ–º –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π

//bot.onText(/\/start/, (msg) => {
  //const chatId = msg.chat.id;
  //bot.sendMessage(chatId, "–ü—Ä–∏–≤–µ—Ç!");
//});

bot.onText("üóùÔ∏è | –í–µ—Ä–Ω—É—Ç—å—Å—è", (msg) => {
  auth(msg);
});

// –§—É–Ω–∫—Ü–∏—è –°—Ç–∞—Ä—Ç–æ–≤–æ–≥–æ –º–µ–Ω—é.
function startmenu(msg) {
    const firstName = msg.from.first_name;
    const lastName = msg.from.last_name;
    const nickname = msg.from.username;
      bot.sendMessage(msg.chat.id, `–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, ${firstName} ${lastName} (@${nickname}). \n\n–î–ª—è –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –∏–ª–∏ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –Ω–∞–∂–º–∏—Ç–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ –∫–Ω–æ–ø–∫–∏ —Å–Ω–∏–∑—É.`, {
        "reply_markup": { // –°–æ–∑–¥–∞–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ —Å–Ω–∏–∑—É.
        "keyboard": [["üîë | –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è", "üìñ | –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è"]] // –¢–µ —Å–∞–º—ã–µ –∫–Ω–æ–ø–∫–∏.
    }
});
}

function auth(msg) {
    const userId = msg.from.id;
    var rows = sqlite.run(`SELECT * FROM users WHERE t_id = ${userId}`);
    var tid = rows[0].t_id;
    var logged = rows[0].logged_in;
    if (userId == tid) {
        sqlite.run(`UPDATE users SET logged_in=1 WHERE t_id = ${userId}`);
        if (logged == 1) {
            bot.sendMessage(msg.chat.id, `–ó–¥—Ä–∞—Å—Ç–≤—É–π—Ç–µ, \n\n –í–∞—à ID –≤ —Å–∏—Å—Ç–µ–º–µ: ${rows[0].id}\n –í–∞—à Telegram ID: ${rows[0].t_id}\n –ò–º—è –∏ –§–∞–º–∏–ª–∏—è: ${rows[0].name} ${rows[0].surname}\n\n –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –ª–∏ –≤—ã: ${rows[0].isAdmin}`, {
            "reply_markup": {
            "keyboard": [["‚è∞ | –°–æ–∑–¥–∞—Ç—å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ","üë∑ | –î–æ–±–∞–≤–∏—Ç—å/–£–¥–∞–ª–∏—Ç—å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞"], ["–í—ã–π—Ç–∏"]]
        },
        });
        }
    } else {
       bot.sendMessage(msg.chat.id, "–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞!");
    }
}


// –°—Ç–∞—Ä—Ç–æ–≤–æ–≥–æ –º–µ–Ω—é.
bot.onText(/\/start/, (msg) => {
    startmenu(msg);
});

// –ë–ª–æ–∫ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏.
bot.onText("üìñ | –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è", (msg) => {

    bot.sendMessage(msg.chat.id, "–¢—É—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è.");

});

// –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è - –º–µ–Ω—é.
bot.onText("üîë | –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è", (msg) => {
    auth(msg);
});

// –°–æ–∑–¥–∞–Ω–∏–µ –∏ —É–¥–∞–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.

bot.onText('üë∑ | –î–æ–±–∞–≤–∏—Ç—å/–£–¥–∞–ª–∏—Ç—å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞', (msg) => {
    const userId = msg.from.id;
    var rows = sqlite.run(`SELECT * FROM users WHERE t_id = ${userId}`);
    var logged = rows[0].logged_in;
    if (logged == 1) {
        bot.sendMessage(msg.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ —á—Ç–æ –Ω—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å.", {
            "reply_markup": {
            "keyboard": [["–î–æ–±–∞–≤–∏—Ç—å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞", "–£–¥–∞–ª–∏—Ç—å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞"], ["üóùÔ∏è | –í–µ—Ä–Ω—É—Ç—å—Å—è"]]
            },
        });
    } else {
        bot.sendMessage(msg.chat.id, "–î–ª—è –Ω–∞—á–∞–ª–∞ –≤–æ–π–¥–∏—Ç–µ!");
    }
});

bot.onText("–î–æ–±–∞–≤–∏—Ç—å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞", (msg) => {
   
    bot.sendMessage(chatId, "–í–≤–µ–¥–∏—Ç–µ Telegram ID, –ò–º—è, –§–∞–º–∏–ª–∏—é —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª:");

});

//bot.onText("–£–¥–∞–ª–∏—Ç—å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞", (msg) => {
    //auth(msg);
//});

// –°–æ–∑–¥–∞—Ç—å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ

bot.onText('‚è∞ | –°–æ–∑–¥–∞—Ç—å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ', (msg) => {
    if (logged_in == 1) {
        bot.sendMessage(msg.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–º—É —Å–æ–∑–¥–∞—Ç—å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ.", {
            "reply_markup": {
            "keyboard": [["–°–æ—Ç—Ä—É–¥–Ω–∏–∫—É", "–ì—Ä—É–ø–ø–µ –°–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤"], ["üóùÔ∏è | –í–µ—Ä–Ω—É—Ç—å—Å—è"]]
            },
        });
    } else {
        bot.sendMessage(msg.chat.id, "–î–ª—è –Ω–∞—á–∞–ª–∞ –≤–æ–π–¥–∏—Ç–µ!");
    }
});

// –í—ã—Ö–æ–¥

bot.onText("–í—ã–π—Ç–∏", (msg) => {
    const userId = msg.from.id;
    sqlite.run(`UPDATE users SET logged_in=1 WHERE t_id = ${userId}`);
    bot.sendMessage(msg.chat.id, "–í—ã —É—Å–ø–µ—à–Ω–æ –≤—ã—à–ª–∏.");
    startmenu(msg);
});

bot.on('polling_error', (error) => {
  console.log(`[polling_error] ${error.code}: ${error.message}`);
});


console.log('–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω.');